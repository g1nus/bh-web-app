{"version":3,"sources":["components/svgUpload.js","utils/utils.js","views/home.js","views/loading.js","components/svgSettings.js","components/settings.js","components/svgBoundingBox.js","components/svgBody.js","components/svgQuadtreeNode.js","components/svgAnimator.js","views/canvas.js","App.js","reportWebVitals.js","index.js"],"names":["SvgUpload","react_default","a","createElement","id","width","height","viewBox","d","_callee","file","_regeneratorRuntime","wrap","_context","prev","next","abrupt","Promise","resolve","reject","fileReader","FileReader","readAsText","onload","event","result","target","parsed","JSON","parse","onerror","error","stop","utils","parseJSON","buildScenario","json","scenarioInfo","reduce","pValue","cValue","maxBoundingBox","bottomLeft","x","boundingBox","y","topRight","nSteps","Infinity","Object","objectSpread","simulationSteps","setUpSvg","windowHeight","windowWidth","console","log","vbH","vbW","concat","svgH","svgW","maxVbH","maxVbW","maxVbY","maxVbX","bodiesSize","velocityRatio","Home","_ref","setScenario","setLoading","hiddenFileInput","useRef","_fileParse","asyncToGenerator","home_regeneratorRuntime","mark","files","sent","t0","apply","this","arguments","type","onChange","_x","accept","ref","style","display","value","onClick","current","click","svgUpload","Loading","className","SvgSettings","Settings","timeInterval","updateTimeInterval","displayMaxBBox","toggleMaxBBox","_useState","useState","_useState2","slicedToArray","displaySetting","setDisplaySetting","svgSettings","htmlFor","name","min","max","defaultValue","checked","Fragment","SvgBoundingBox","fill","strokeWidth","opacity","stroke","vectorEffect","SvgBody","r","vx","vy","vr","cx","cy","x1","y1","x2","y2","SvgQuadtreeNode","quadtree","leaf","body","svgBoundingBox","svgBody","position","velocity","fork","nw","ne","se","sw","computeOutput","SvgAnimator","scenario","svgInfo","setSvgInfo","_useState3","_useState4","setDisplayMaxBBox","_useState5","_useState6","currStep","setCurrStep","stepIndex","useEffect","window","innerHeight","innerWidth","length","animate","setTimeout","settings","svgQuadtreeNode","Canvas","svgAnimator","App","loading","views_loading","home","canvas","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f788e664.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SvgUpload() {\n  return (\n    <svg id=\"upload\" width=\"100\" height=\"125\" viewBox=\"0 0 99.09 122.88\">\n      <path d=\"M64.64,13,86.77,36.21H64.64V13ZM42.58,71.67a3.25,3.25,0,0,1-4.92-4.25l9.42-10.91a3.26,3.26,0,0,1,4.59-.33,5.14,5.14,0,0,1,.4.41l9.3,10.28a3.24,3.24,0,0,1-4.81,4.35L52.8,67.07V82.52a3.26,3.26,0,1,1-6.52,0V67.38l-3.7,4.29ZM24.22,85.42a3.26,3.26,0,1,1,6.52,0v7.46H68.36V85.42a3.26,3.26,0,1,1,6.51,0V96.14a3.26,3.26,0,0,1-3.26,3.26H27.48a3.26,3.26,0,0,1-3.26-3.26V85.42ZM99.08,39.19c.15-.57-1.18-2.07-2.68-3.56L63.8,1.36A3.63,3.63,0,0,0,61,0H6.62A6.62,6.62,0,0,0,0,6.62V116.26a6.62,6.62,0,0,0,6.62,6.62H92.46a6.62,6.62,0,0,0,6.62-6.62V39.19Zm-7.4,4.42v71.87H7.4V7.37H57.25V39.9A3.71,3.71,0,0,0,61,43.61Z\"/>\n    </svg>\n  );\n}\n\nexport default SvgUpload;","async function parseJSON(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n    fileReader.onload = event => {\n      /** @type {string} */\n      const result = event.target.result;\n      const parsed = JSON.parse(result);\n      resolve(parsed);\n    }\n    fileReader.onerror = error => reject(error);\n  });\n}\n\nfunction buildScenario(json) {\n  let scenarioInfo = json.reduce((pValue, cValue) =>({\n    maxBoundingBox: {\n      bottomLeft: {\n        x: (cValue.boundingBox.bottomLeft.x < pValue.maxBoundingBox.bottomLeft.x) ? cValue.boundingBox.bottomLeft.x : pValue.maxBoundingBox.bottomLeft.x,\n        y: (cValue.boundingBox.bottomLeft.y < pValue.maxBoundingBox.bottomLeft.y) ? cValue.boundingBox.bottomLeft.y : pValue.maxBoundingBox.bottomLeft.y\n      },\n      topRight: {\n        x: (cValue.boundingBox.topRight.x > pValue.maxBoundingBox.topRight.x) ? cValue.boundingBox.topRight.x : pValue.maxBoundingBox.topRight.x,\n        y: (cValue.boundingBox.topRight.y > pValue.maxBoundingBox.topRight.y) ? cValue.boundingBox.topRight.y : pValue.maxBoundingBox.topRight.y\n      }\n    },\n    nSteps: ++pValue.nSteps\n  }), \n  {\n    maxBoundingBox: {\n      bottomLeft: {\n        x: Infinity,\n        y: Infinity\n      },\n      topRight: {\n        x: -Infinity,\n        y: -Infinity\n      }\n    },\n    nSteps: 0\n  })\n  return {\n    ...scenarioInfo,\n    simulationSteps: json\n  }\n}\n\nfunction setUpSvg(windowHeight, windowWidth, maxBoundingBox) {\n  console.log(maxBoundingBox);\n  let vbH = maxBoundingBox.topRight.y - maxBoundingBox.bottomLeft.y;\n  let vbW = maxBoundingBox.topRight.x - maxBoundingBox.bottomLeft.x;\n  console.log(`${windowHeight} x ${windowWidth}`)\n  return{\n    svgH: (windowHeight < windowWidth) ? windowHeight : windowWidth * (vbH/vbW),\n    svgW: (windowHeight >= windowWidth) ? windowWidth : windowHeight * (vbW/vbH),\n    maxVbH: vbH,\n    maxVbW: vbW,\n    maxVbY: maxBoundingBox.bottomLeft.y,\n    maxVbX: maxBoundingBox.bottomLeft.x,\n    bodiesSize: (vbH > vbW) ? vbH/100 : vbW/100,\n    velocityRatio: (vbH > vbW) ? vbH/1000 : vbW/1000\n  };\n}\n\nconst utils = {\n  parseJSON,\n  buildScenario,\n  setUpSvg\n}\n\nexport {utils}","import React, {useRef} from 'react';\nimport SvgUpload from '../components/svgUpload';\nimport {utils} from \"./../utils/utils\";\n\nfunction Home({setScenario, setLoading}) {\n\n  const hiddenFileInput = useRef(null);\n\n  async function fileParse(event){\n    setLoading(true);\n    try{\n      const file = event.target.files[0];\n      const json = await utils.parseJSON(file);\n      setScenario(utils.buildScenario(json));\n      setLoading(false);\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  return (\n    <div id=\"home-view\">\n      <h1 id=\"title\">\n        View a Barnes Hut simulation\n      </h1>\n      <input type=\"file\" id=\"file-selector\" onChange={fileParse} accept=\".json\" ref={hiddenFileInput} style={{display: 'none'}}/>\n      <input type=\"button\" id=\"file-cover\" value=\"Upload JSON...\" onClick={(event) => hiddenFileInput.current.click()}/>\n      <SvgUpload/>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nfunction Loading() {\n\n  return (\n    <div id=\"loading-wrapper\">\n      <p className='loading'>loading<span className='dot-1'>.</span><span className='dot-2'>.</span><span className='dot-3'>.</span></p>\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\n\nfunction SvgSettings() {\n  return (\n    <svg id=\"clog\" viewBox=\"0 0 512 512\" width=\"28\" height=\"28\">\n      <path d=\"M483.184,190.536l-28.04-2.808c-2.84-8.272-6.2-16.368-10.072-24.248l17.888-21.872l18.328-22.408l-20.464-20.472\n\t\t\tl-47.488-47.52l-20.488-20.496l-22.424,18.36l-21.792,17.84c-7.888-3.88-15.984-7.256-24.272-10.104l-2.8-27.992L318.688,0h-28.96\n\t\t\th-33.576h-33.864h-28.96l-2.888,28.816l-2.8,27.984c-8.288,2.856-16.4,6.224-24.288,10.112L141.576,49.08l-22.424-18.36\n\t\t\tL98.664,51.216l-47.488,47.52l-20.456,20.48l18.328,22.408l17.88,21.856c-3.872,7.888-7.232,15.984-10.08,24.264l-28.032,2.808\n\t\t\tL0,193.432v28.96v67.2v28.96l28.816,2.88l28.024,2.808c2.84,8.288,6.208,16.392,10.088,24.288l-17.872,21.856l-18.336,22.4\n\t\t\tl20.464,20.472l47.488,47.52l20.488,20.496l22.424-18.36l21.776-17.824c7.896,3.888,16.008,7.264,24.304,10.12l2.8,27.984\n\t\t\tl2.88,28.808h28.96h33.584h33.864h28.96l2.888-28.816l2.8-27.992c8.296-2.856,16.4-6.232,24.288-10.12l21.784,17.84l22.424,18.36\n\t\t\tl20.488-20.496l47.488-47.52l20.456-20.472l-18.32-22.408l-17.896-21.888c3.864-7.88,7.224-15.976,10.064-24.248l28.04-2.824\n\t\t\tL512,318.52v-28.944v-67.2v-28.96L483.184,190.536z M480,289.576l-49.696,5c-4.552,20.68-12.712,39.976-23.76,57.304\n\t\t\tl31.688,38.752l-47.488,47.52l-38.688-31.672c-17.328,11.096-36.64,19.296-57.336,23.88L289.744,480H256.16h-0.28h-33.584\n\t\t\tl-4.968-49.64c-20.712-4.568-40.024-12.768-57.352-23.864l-38.672,31.664l-47.488-47.52l31.672-38.72\n\t\t\tc-11.056-17.336-19.24-36.632-23.792-57.344L32,289.592v-67.2l49.696-4.976c4.568-20.696,12.744-40.008,23.792-57.328\n\t\t\tl-31.672-38.72l47.488-47.52l38.672,31.656c17.312-11.08,36.624-19.28,57.336-23.864L222.288,32h33.584h0.28h33.576l4.968,49.64\n\t\t\tc20.704,4.584,40.016,12.784,57.328,23.864l38.688-31.672l47.488,47.52l-31.688,38.736c11.04,17.32,19.224,36.616,23.776,57.32\n\t\t\tL480,222.376V289.576z\"/>\n      <path d=\"M256,157.272c-54.448,0-98.736,44.288-98.736,98.736c0,54.44,44.288,98.728,98.736,98.728S354.736,310.44,354.736,256\n\t\t\tS310.448,157.272,256,157.272z M256,322.728c-36.8,0-66.736-29.928-66.736-66.728S219.2,189.272,256,189.272\n\t\t\ts66.736,29.936,66.736,66.736S292.8,322.728,256,322.728z\"/>\n    </svg>\n  );\n}\n\nexport default SvgSettings;","import React, { useState } from 'react';\nimport SvgSettings from './svgSettings';\n\nfunction Settings({timeInterval, updateTimeInterval, displayMaxBBox, toggleMaxBBox}) {\n\n  const [displaySetting, setDisplaySetting] = useState(false);\n\n  function toggleDisplaySetting() {\n    setDisplaySetting(!displaySetting);\n  }\n\n  return (\n    <div id=\"settings-wrapper\">\n      <button id=\"toggle-settings\" type=\"button\" onClick={toggleDisplaySetting}>\n        <SvgSettings/>\n      </button>\n      {\n        (displaySetting) ? \n          <div id=\"settings\">\n            <label id=\"s\" htmlFor='sleep'>Animation sleep time</label>\n            <input type=\"number\" id=\"sleep\" name=\"sleep\" min=\"0\" max=\"5000\" defaultValue={timeInterval.current} onChange={updateTimeInterval}/>\n            <label id=\"vb\" htmlFor=\"view-box\">Use max viewbox as viewbox</label>\n            <input type=\"checkbox\" id=\"view-box\" name=\"view-box\" value=\"Max\" checked={displayMaxBBox} onChange={toggleMaxBBox}/>\n          </div>\n        :\n          <></>\n      }\n    </div>\n  );\n}\n\nexport default Settings;","import React from 'react';\n\nfunction SvgBoundingBox({x,y,width, height}) {\n  return (\n    <>\n      <rect x={x} y={y} width={width} height={height} style={{fill:\"none\",strokeWidth:\"1\", opacity:\"0.1\", stroke:\"rgb(30,30,30)\"}} vectorEffect=\"non-scaling-stroke\" />\n    </>\n  );\n}\n\nexport default SvgBoundingBox;","import React from 'react';\n\nfunction SvgBody({x,y,r, vx, vy, vr}) {\n  return (\n    <g>\n      <circle cx={x} cy={y} r={r} style={{fill:\"black\",strokeWidth:\"3\",stroke:\"rgb(0,0,0)\"}} />\n      <line x1={x} y1={y} x2={x + (vx*vr)} y2={y + (vy*vr)} stroke=\"green\" vectorEffect=\"non-scaling-stroke\"/>\n    </g>\n  );\n}\n\nexport default SvgBody;","import React from 'react';\nimport SvgBoundingBox from './svgBoundingBox';\nimport SvgBody from './svgBody';\n\nfunction SvgQuadtreeNode({quadtree, bodiesSize, velocityRatio}) {\n\n  function computeOutput(quadtree, bodiesSize){\n    if(quadtree && quadtree.leaf && quadtree.leaf.body) {\n      return (\n        <g>\n          <SvgBoundingBox \n            x={quadtree.boundingBox.bottomLeft.x} y={quadtree.boundingBox.bottomLeft.y} \n            width={quadtree.boundingBox.topRight.x - quadtree.boundingBox.bottomLeft.x}\n            height={quadtree.boundingBox.topRight.y - quadtree.boundingBox.bottomLeft.y}\n          />\n          <SvgBody x={quadtree.leaf.body.position.x} y={quadtree.leaf.body.position.y} r={bodiesSize} \n                   vx={quadtree.leaf.body.velocity.x} vy={quadtree.leaf.body.velocity.y}\n                   vr={velocityRatio}/>\n        </g>\n      )\n    }else if(quadtree && quadtree.leaf){\n      return (\n        <SvgBoundingBox \n          x={quadtree.boundingBox.bottomLeft.x} y={quadtree.boundingBox.bottomLeft.y} \n          width={quadtree.boundingBox.topRight.x - quadtree.boundingBox.bottomLeft.x}\n          height={quadtree.boundingBox.topRight.y - quadtree.boundingBox.bottomLeft.y}\n        />\n      )\n    }else if(quadtree && quadtree.fork){\n      return (\n        <g>\n          <SvgBoundingBox \n            x={quadtree.boundingBox.bottomLeft.x} y={quadtree.boundingBox.bottomLeft.y} \n            width={quadtree.boundingBox.topRight.x - quadtree.boundingBox.bottomLeft.x}\n            height={quadtree.boundingBox.topRight.y - quadtree.boundingBox.bottomLeft.y}\n          />\n          <SvgQuadtreeNode quadtree={quadtree.fork.nw} bodiesSize={bodiesSize} velocityRatio={velocityRatio}/>\n          <SvgQuadtreeNode quadtree={quadtree.fork.ne} bodiesSize={bodiesSize} velocityRatio={velocityRatio}/>\n          <SvgQuadtreeNode quadtree={quadtree.fork.se} bodiesSize={bodiesSize} velocityRatio={velocityRatio}/>\n          <SvgQuadtreeNode quadtree={quadtree.fork.sw} bodiesSize={bodiesSize} velocityRatio={velocityRatio}/>\n        </g>\n      )\n    }\n\n    return (\n      <></>\n    )\n    \n  }\n\n  return (\n    computeOutput(quadtree, bodiesSize)\n  );\n}\n\nexport default SvgQuadtreeNode;","import React, { useEffect, useRef, useState } from 'react';\nimport {utils} from \"./../utils/utils\";\nimport Settings from './settings';\nimport SvgQuadtreeNode from './svgQuadtreeNode';\n\nfunction SvgAnimator({scenario}) {\n\n  const [svgInfo, setSvgInfo] = useState(\n    {svgH: 0, svgW: 0, maxVbH: 0, maxVbW: 0, maxVbY: 0, maxVbX: 0, bodiesSize: null, velocityRatio: 0}\n  );\n\n  const [displayMaxBBox, setDisplayMaxBBox] = useState(true);\n\n  const [currStep, setCurrStep] = useState([]);\n\n  const timeInterval = useRef(200);\n  const stepIndex = useRef(0);\n\n  useEffect(() => {\n    setSvgInfo(utils.setUpSvg(window.innerHeight, window.innerWidth, scenario.maxBoundingBox))\n  }, [scenario])\n\n  useEffect(() => {\n    console.log(\"ANIMATION HOOK CALLED\");\n    function animate() {\n      setTimeout(() => {\n          setCurrStep(scenario.simulationSteps[stepIndex.current].quadtree);\n          stepIndex.current++;\n          console.log(timeInterval.current)\n          if(stepIndex.current < scenario.simulationSteps.length){\n            animate();\n          }\n      }, timeInterval.current);\n    }\n    if(scenario.simulationSteps.length > 0){\n      console.log(\"START ANIMATION\");\n      setCurrStep(scenario.simulationSteps[stepIndex.current].quadtree);\n      animate();\n    }\n  }, [scenario.simulationSteps])\n\n  function updateTimeInterval(event){\n    if(event.target.value > 0 && event.target.value < 5000){\n      timeInterval.current = event.target.value;\n    }\n  }\n\n  function toggleMaxBBox(){\n    setDisplayMaxBBox(!displayMaxBBox);\n  }\n\n  return (\n    <>\n      <Settings timeInterval={timeInterval} updateTimeInterval={updateTimeInterval} displayMaxBBox={displayMaxBBox} toggleMaxBBox={toggleMaxBBox}/>\n      <svg id=\"animator\" width={svgInfo.svgW} height={svgInfo.svgH} viewBox={\n        (displayMaxBBox) ?\n          `${svgInfo.maxVbX} ${svgInfo.maxVbY} ${svgInfo.maxVbW} ${svgInfo.maxVbH}`\n        :\n          `${currStep.boundingBox.bottomLeft.x} ${currStep.boundingBox.bottomLeft.y} ${currStep.boundingBox.topRight.x - currStep.boundingBox.bottomLeft.x} ${currStep.boundingBox.topRight.y - currStep.boundingBox.bottomLeft.y}`\n        }>\n        {\n          (svgInfo.bodiesSize != null) ? <SvgQuadtreeNode quadtree={currStep} bodiesSize={\n            (displayMaxBBox) ?\n              svgInfo.bodiesSize\n            :\n              ((currStep.boundingBox.topRight.x - currStep.boundingBox.bottomLeft.x)/100)\n          } velocityRatio={svgInfo.velocityRatio}/> : <></>\n        }\n      </svg>\n    </>\n  );\n}\n\nexport default SvgAnimator;","import React from 'react';\nimport SvgAnimator from '../components/svgAnimator';\n\nfunction Canvas({scenario}) {\n\n  return (\n    <div id=\"svg-wrapper\">\n      <SvgAnimator {...{scenario}}/> \n    </div>\n  );\n}\n\nexport default Canvas;","import React, { useState } from 'react';\nimport Home from \"./views/home\"\nimport Loading from './views/loading';\nimport Canvas from './views/canvas';\n\nfunction App() {\n  const [scenario, setScenario] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  return (\n      <div className=\"App\">\n        {\n          (loading) ?\n            <Loading/>\n          :\n            (\n              (scenario == null) ?\n                <Home {...{setScenario, setLoading}} />\n              :\n                <Canvas {...{scenario}}/>\n            )\n        }\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}